
local.ToUTC > UTC
[calendar.ToUnix > Unix]

utc.ToLocal < UTC
[unix.ToReadable < Unix]

----

:Role 
	Colorful
	Tagged
:Char
	Administrator
		- moderatoring++
		- control chat
		- control roles
		- read log
		- control invites
	Moderator
		- freeze members
		- hide/show messages
		- (un)mute members

----

:Permissions
	Read:
		All
		Picked role
		Picked char
		Picked def members
	Write:
		All
		Picked role
		Picked char
		Picked def members

----

на query и mutation полях установлена дириктива @isAuth, она нужна для проверки контекста на наличие даннгых пользователя от которого пришел запрос, сами данные попадают в контекст через мидлвеир на "эдпоинте" грапхкуаля, если данные небыли найдены то возвращается ошибка.

некоторые поля при обработке запроса ресольвятся отдельно(@goField), тк одним запросом к базе сложно собрать все в одну структуру. например поле chat.rooms и chat.roles, их не получится собрать в одну структуру сразу тк это разные таблицы в базе данных и они никак не связны между собой

deprocated
	// пользователь должен будет сам определяться, через какой нибудь метод
	// который возвращает либо target либо просто user, а это поля переданы поле контекста конструктора пайплайна
	// либо проинициализированы сущности



проложить переделывать репозитирий

'sad'
1: в чате вместо me_restricts просто me, внутри которого chat_member
2: MeRestricts теперь часть chat_member +
3: banlist доступен только внутри chat
4: на chat весит доп проверка на IsNotBanned

**Если добавить ко всем объектам ID то найти объект которому он принадлежит будет проще
enum EventType {
	NEWMESSAGE

	UPDATEUSER
	UPDATEMEMBER

	UPDATEROLE

	UPDATEFORM

	CREATEALLOW
	DELETEALLOW

	UPDATECHAT

	CREATEROOM
	UPDATEROOM
	DELETEROOM

	CREATEINVITE
	DELETEINVITE
}

type SubscriptionBody {
	rev: Int!
	event: EventType!
#	action: EventSubjectAction
	body: EventResult!
}

type NewMessage { # todo rename
	id: ID!
	roomId: ID!
	replyToId: ID
	authorId: ID
	body: String!
	msgType: MessageType!
	createdAt: Int64!
}

type UpdateUser {
	id: ID!
	domain: String!
	name: String!
}

type UpdateMember {
	id: ID!
#	chatId: Chat!
#	userId: User!
	roleId: ID
	char: CharType
#	joinedAt: Int64!
	muted: Boolean!
	frozen: Boolean!
}

type UpdateRole {
	id: ID!
	name: String!
	color: HexColor!
}

type UpdateRoom {
	id: ID!
#	chatId: ID!
	name: String!
	parentId: ID
	note: String
}

type CreateRoom {
	id: ID!
	chatId: ID!
	name: String!
	parentId: ID
	note: String
}

type DeleteRoom {
	id: ID!
}

type UpdateForm {
	roomId: ID!
	form: Form
}

type CreateAllow {
	roomId: ID!
	allow: Allow!
}
type DeleteAllow {
	allowId: ID
}

type UpdateChat {
	id: ID!
	domain: String!
	name: String!
	private: Boolean!
#	countMembers: Int!
}

type CreateInvite {
	code: String!
	aliens: Int
	expiresAt: Int64
}
enum DeleteInviteReason {
	BYUSER
	EXPIRED # todo, temporarily not supported
}
type DeleteInvite {
	reason: DeleteInviteReason!
	code: String!
}
